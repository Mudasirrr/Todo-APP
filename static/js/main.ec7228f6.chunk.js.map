{"version":3,"sources":["Context.js","components/Form.js","components/List.js","Reducer.js","App.js","usePersist.js","index.js"],"names":["Store","React","createContext","todos","Form","dispatch","useContext","useState","todo","setTodo","handleTodoAdd","type","payload","className","value","autoFocus","placeholder","onKeyUp","event","keyCode","onChange","console","log","target","onClick","List","state","map","t","key","style","marginLeft","Reducer","action","includes","filter","App","globalStore","context","persistedContext","localStorage","getItem","JSON","parse","usePersistedContext","useEffect","setItem","stringify","usePersistedReducer","useReducer","reducer","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAUeA,EARFC,IAAMC,cAAc,CAC7BC,MAAO,CACH,MACA,QACA,aCuCOC,MA3Cf,WAAgB,IACLC,EAAUC,qBAAWN,GAArBK,SADI,EAGUE,mBAAS,IAHnB,mBAGNC,EAHM,KAGDC,EAHC,KAUX,SAASC,IACLL,EAAS,CAACM,KAAK,WAAWC,QAAQJ,IAClCC,EAAQ,IAQZ,OACI,yBAAKI,UAAU,OACb,yBAAKA,UAAU,aACb,6BACA,yBAAKA,UAAU,eACb,2BACEA,UAAU,eACVC,MAAON,EACPO,WAAW,EACXC,YAAY,iBACZC,QAfZ,SAA0BC,GAEH,KAAhBA,EAAMC,SAAcT,KAcfU,SA1BZ,SAA0BF,GACtBG,QAAQC,IAAI,QAAQJ,GACpBT,EAAQS,EAAMK,OAAOT,UA0Bf,yBAAKD,UAAU,sBACb,4BAAQA,UAAU,kBAAkBW,QAASd,GAA7C,YCIDe,MAnCd,WAAiB,IAAD,EACanB,qBAAWN,GAA/B0B,EADO,EACPA,MAAOrB,EADA,EACAA,SAGf,OACE,yBAAKQ,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,+BAIJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cACXa,EAAMvB,MAAMwB,KAAI,SAAAC,GAAC,OAChB,wBAAIC,IAAKD,EAAGf,UAAU,mBACnBe,EACD,4BACEf,UAAU,oCACViB,MAAO,CAAEC,WAAY,IACrBP,QAAS,kBAAMnB,EAAS,CAAEM,KAAM,WAAYC,QAASgB,MAHvD,sB,cCAHI,MAxBf,SAAiBN,EAAOO,GACpB,OAAQA,EAAOtB,MACX,IAAK,WACD,OAAKsB,EAAOrB,QAGRc,EAAMvB,MAAM+B,SAASD,EAAOrB,SACrBc,EAEJ,2BACAA,GADP,IAEIvB,MAAM,GAAD,mBAAMuB,EAAMvB,OAAZ,CAAmB8B,EAAOrB,YAPxBc,EASX,IAAK,WACD,OAAO,2BACAA,GADP,IAEIvB,MAAOuB,EAAMvB,MAAMgC,QAAO,SAAAP,GAAC,OAAIA,IAAMK,EAAOrB,aAGhD,QACI,OAAOc,ICWVU,MAlBjB,WAEI,IAAMC,ECXH,SAA6BC,GAAyB,IAAhBT,EAAe,uDAAT,QACzCU,EAAmBC,aAAaC,QAAQZ,GAE9C,OAAOU,EAAmBG,KAAKC,MAAMJ,GAAoBD,EDQrCM,CAAoBtC,qBAAWN,GAAQ,SAFhD,ECHR,YAAgE,IAAD,mBAAjC0B,EAAiC,KAA1BrB,EAA0B,KAAfwB,EAAe,uDAAT,QAEzD,OADAgB,qBAAU,kBAAML,aAAaM,QAAQjB,EAAKa,KAAKK,UAAUrB,MAAS,CAACA,IAC5D,CAACA,EAAOrB,GDMW2C,CACxBC,qBAAWC,EAASb,GACpB,SAPS,mBAKJX,EALI,KAKGrB,EALH,KAUX,OAEE,kBAAC,EAAM8C,SAAP,CAAgBrC,MAAO,CAAEY,QAAOrB,aAC9B,kBAAE,EAAF,MACA,kBAAE,EAAF,QEvBR+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.ec7228f6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Store =React.createContext({\n    todos: [\n        'SRS',\n        'React',\n        'Subject'\n    ]\n})\n\nexport default Store;","import React, { useState, useContext } from 'react';\nimport Store from '../Context';\nfunction Form(){\n    const {dispatch}=useContext(Store);\n\n    let [todo,setTodo] = useState(\"\");\n\n    function handleTodoChange(event){\n        console.log(\"event\",event)\n        setTodo(event.target.value);\n    }\n\n    function handleTodoAdd(){\n        dispatch({type:'ADD_TODO',payload:todo});\n        setTodo(\"\");\n    }\n\n    function handleSubmitForm(event){\n        // console.log(\"event\",ev);\n        if(event.keyCode===13) handleTodoAdd();\n    }\n\n    return (\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <br />\n            <div className=\"input-group\">\n              <input\n                className=\"form-control\"\n                value={todo}\n                autoFocus={true}\n                placeholder=\"Enter new todo\"\n                onKeyUp={handleSubmitForm}\n                onChange={handleTodoChange}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-primary\" onClick={handleTodoAdd}>\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n}\nexport default Form;","import React, { useContext } from \"react\";\nimport Store from \"../Context\";\nimport Header  from \"./Header\";\n\n\n function List() {\n  const { state, dispatch } = useContext(Store);\n\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <br />\n            \n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ul className=\"list-group\">\n              {state.todos.map(t => (\n                <li key={t} className=\"list-group-item\">\n                  {t}\n                  <button\n                    className=\"float-right btn btn-danger btn-sm\"\n                    style={{ marginLeft: 10 }}\n                    onClick={() => dispatch({ type: \"COMPLETE\", payload: t })}\n                  >\n                    Complete\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default List;","function Reducer(state, action) {\n    switch (action.type) {\n        case \"ADD_TODO\":\n            if (!action.payload) {\n                return state;\n            }\n            if (state.todos.includes(action.payload)) {\n                return state;\n            }\n            return {\n                ...state,\n                todos: [...state.todos, action.payload]\n            }\n            case \"COMPLETE\":\n                return {\n                    ...state,\n                    todos: state.todos.filter(t => t !== action.payload)\n                }\n\n                default:\n                    return state;\n\n    }\n}\nexport default Reducer;","import React, {    useReducer,    useContext} from 'react';\nimport Form from './components/Form';\nimport List from './components/List';\n// import Header from './components/Header';\n\nimport Store from './Context';\nimport reducer from './Reducer';\n\nimport {\n    usePersistedContext,\n    usePersistedReducer\n} from './usePersist';\n\nfunction App() {\n    // create a global store to store the state\n    const globalStore = usePersistedContext(useContext(Store), \"state\");\n  \n    // `todo s` will be a state manager to manage state.\n    const [state, dispatch] = usePersistedReducer(\n      useReducer(reducer, globalStore),\n      \"state\" // The localStorage key\n    );\n  \n    return (\n      // State.Provider passes the state and dispatcher to the down\n      <Store.Provider value={{ state, dispatch }}>\n        < Form />\n        < List />\n      </Store.Provider>\n    );\n  }\n  export default App;","import {\r\n    useEffect\r\n} from 'react';\r\n\r\nexport function usePersistedContext(context, key = \"state\") {\r\n    const persistedContext = localStorage.getItem(key);\r\n\r\n    return persistedContext ? JSON.parse(persistedContext) : context;\r\n}\r\n\r\nexport function usePersistedReducer([state, dispatch], key = \"state\") {\r\n    useEffect(() => localStorage.setItem(key, JSON.stringify(state)), [state]);\r\n    return [state, dispatch];\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}